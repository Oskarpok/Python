import os
from tkinter import *
from tkinter import filedialog, colorchooser, font
from tkinter.messagebox import *
from tkinter.filedialog import *

def change_color():
    color = colorchooser.askcolor(title='Choose a color')
    text_area.config(fg=str(color[1]))

def change_font(*args):
    text_area.config(font=(font_name.get(), size_box.get()))

def update_font_size(event):
    font_size.set(size_box.get())
    change_font()

def new_file():
    window.title('New unnamed whindow')
    text_area.delete(1.0, END)

def open_file():
    #Open file default as txt take file pach add title that file title as window title get what is
    # in tht file and add it to current window open file on reed mode and reed from 1.0
    # (row and position in that row) except print mistake nad close file
    file = askopenfilename(defaultextension=".txt", filetypes=[("All Files", ".*"),
                                                               ("Text file", ".txt")])

    try:
        window.title(os.path.basename(file))
        text_area.delete(1.0, END)

        file = open(file, 'r')
        text_area.insert(1.0, file.read())

    except Exception:
        print("Coudyn't read a file")

    finally:
        file.close()

def save_file():
    #Open file default as txt take file pach if file is none return and stop funtion add title that
    # file title as window title can save to existent file or create new write all what i writen in
    #GUI and writ it to that file other print exept comand and close the file
    file = filedialog.asksaveasfilename(initialfile='New.txt', defaultextension='.txt',
                                        filetypes=[("All Files", ".*"), ("Text File", ".txt")])

    if file is None:
        return
    else:
        try:
            window.title(os.path.basename(file))
            file = open(file, 'w')

            file.write(text_area.get(1.0, END))

        except Exception:
            print("Couldn't save file")

        finally:
            file.close()

def cut():
    text_area.event_generate("<<Cut>>")

def copy():
    text_area.event_generate("<<Copy>>")

def paste():
    text_area.event_generate("<<Paste>>")

def about():
    showinfo("About this program", "This is a some editor text witch couple standards option ")

def change_cursor_enter(event):
    scroll_bar.config(cursor="hand2")

def change_cursor_leave(event):
    scroll_bar.config(cursor="")


window = Tk()
window.title('Text editor')
file = None

# Set a size of whindow and how much whindow is moved from screenwidth and screenheight right now is it
# near to middle but you can easy chanage it just change the x and y on you needs
whindow_height = 500
whindow_width = 500
screan_width = window.winfo_screenwidth()
screan_height = window.winfo_screenheight()
x = int((screan_width / 2) - (whindow_width / 2))
y = int((screan_height / 2) - (whindow_height / 2))

window.geometry('{}x{}+{}+{}'.format(whindow_width, whindow_height, x, y))

font_name = StringVar(window)
font_name.set('Arial')
# String ar declaration to exly change size and font of text use on esiest use of some widget in whndow
font_size = StringVar(window)
font_size.set('25')

menu_bar = Menu(window)
window.config(menu=menu_bar)

file_menu = Menu(menu_bar, tearoff=0)
menu_bar.add_cascade(label="File", menu=file_menu)
file_menu.add_command(label='New', command=new_file)
file_menu.add_command(label='Open', command=open_file)
file_menu.add_command(label='Save', command=save_file)
file_menu.add_separator()
file_menu.add_command(label='Exit', command=quit)

edit_menu = Menu(menu_bar, tearoff=0)
menu_bar.add_cascade(label='Edit', menu=edit_menu)
edit_menu.add_command(label="Cut", command=cut)
edit_menu.add_command(label="Copy", command=copy)
edit_menu.add_command(label="Paste", command=paste)

help_menu = Menu(menu_bar, tearoff=0)
menu_bar.add_cascade(label="Help", menu=help_menu)
help_menu.add_command(label="About", command=about)
# declaration of Text ale nad scrool bar
text_area = Text(window, font=(font_name.get(), font_size.get()), )
scroll_bar = Scrollbar(text_area)
#whindow.grid..... is used to manage the spce 
window.grid_rowconfigure(1, weight=1)
window.grid_columnconfigure(0, weight=1)

text_area.grid(row=1, column=0, sticky=N + E + W + S)
text_area.config(yscrollcommand=scroll_bar.set)
scroll_bar.pack(side=RIGHT, fill=Y)
scroll_bar.config(command=text_area.yview)

frame = Frame(window)
frame.grid(row=0, column=0, sticky=EW)

color_button = Button(frame, text='color', command=change_color)
color_button.grid(row=0, column=0)

font_box = OptionMenu(frame, font_name, *font.families(), command=change_font)
font_box.grid(row=0, column=1)

size_box = Spinbox(frame, from_=1, to=100, textvariable=font_size, command=change_font)
size_box.grid(row=0, column=2)
#bint to change sie text immediately when are changed and to move and change scroold mose and move whindow up down
size_box.bind("<FocusOut>", update_font_size)
size_box.bind("<Return>", update_font_size)
scroll_bar.bind("<Enter>", change_cursor_enter)
scroll_bar.bind("<Leave>", change_cursor_leave)


window.mainloop()


# Optiont for  update on future rememember a size and coolor of text
# And to create exe file check pip and pyinstaler are Instaler/updated
# To exe put all file things like code icon(must have good format) and others on one directory
# change main directory to directory witch file(cd) us pyinstaler with choosen option like
# -F -w -i name_of_file_with_code   or if will be mistake like ("pyinstaler is not rekognized as")
# use python -m PyInstaller -F -w -i name_of_file_with_code
